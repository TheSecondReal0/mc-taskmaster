from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdatePlayerRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, score=None):  # noqa: E501
        """UpdatePlayerRequest - a model defined in OpenAPI

        :param score: The score of this UpdatePlayerRequest.  # noqa: E501
        :type score: int
        """
        self.openapi_types = {
            'score': int
        }

        self.attribute_map = {
            'score': 'score'
        }

        self._score = score

    @classmethod
    def from_dict(cls, dikt) -> 'UpdatePlayerRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The update_player_request of this UpdatePlayerRequest.  # noqa: E501
        :rtype: UpdatePlayerRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def score(self) -> int:
        """Gets the score of this UpdatePlayerRequest.


        :return: The score of this UpdatePlayerRequest.
        :rtype: int
        """
        return self._score

    @score.setter
    def score(self, score: int):
        """Sets the score of this UpdatePlayerRequest.


        :param score: The score of this UpdatePlayerRequest.
        :type score: int
        """
        if score is None:
            raise ValueError("Invalid value for `score`, must not be `None`")  # noqa: E501

        self._score = score
