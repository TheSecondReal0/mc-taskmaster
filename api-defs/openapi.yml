openapi: '3.0.3'
info:
  title: MC Taskmaster
  version: '1.0'
servers:
  - url: http://api.task.jazure.net
paths:
  /tasks:
    get:
      operationId: get_tasks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
                  count:
                    type: integer
                required:
                  - tasks
                  - count
    post:
      operationId: create_task
      requestBody:
        description: Create a new task
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                points:
                  type: integer
                min_session:
                  type: integer
                max_session:
                  type: integer
              required:
                - description
                - points
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Task created successfully
  /tasks/{task_id}:
    parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: get_task
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Task corresponding to id
        "404":
          description: Task not found
    put:
      operationId: update_task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                points:
                  type: integer
                min_session:
                  type: integer
                max_session:
                  type: integer
              required:
                - description
                - points
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Task updated successfully
        "404":
          description: Task not found
    delete:
      operationId: delete_task
      responses:
        "204":
          description: Task deleted successfully
        "404":
          description: Task not found
  /tasks/{task_id}/categories/{category_id}:
    parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
      - name: category_id
        in: path
        required: true
        schema:
          type: string
    put:
      operationId: add_category_to_task
      description: Add a category to a task
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Category added to task successfully
        "404":
          description: Task or category not found
    delete:
      operationId: remove_category_from_task
      description: Remove a category from a task
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Category removed from task successfully
        "404":
          description: Task or category not found

  /categories:
    get:
      operationId: get_categories
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Category"
                  count:
                    type: integer
                required:
                  - tasks
                  - count
    post:
      operationId: create_category
      requestBody:
        description: Create a new category
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Category created successfully
  /categories/{category_id}:
    parameters:
      - name: category_id
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: get_category
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Category corresponding to id
        "404":
          description: Category not found
    put:
      operationId: update_category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Category updated successfully
        "404":
          description: Category not found
    delete:
      operationId: delete_category
      responses:
        "204":
          description: Category deleted successfully
        "404":
          description: Category not found

# add task to category (PUT /tasks/{taskId}/categories/{categoryId} ?)
# remove task from category

#### DISCORD BOT
# look at current discord bot for what we need to support
# all tasks should be returned in the order they were assigned
# /player/{playerId}/tasks GET
# /player/{playerId}/tasks/assign (assign tasks to player)
# /player/{playerId}/tasks/reroll (assign tasks to player)
# /player/{playerId}/tasks/{taskId OR idx in time_assigned order}/fail POST
# /player/{playerId}/tasks/{taskId OR idx in time_assigned order}/complete POST

# /player/{playerId}/categories/{categoryId} PUT
# /player/{playerId}/categories/{categoryId} DEL

#### MANAGEMENT
# /session/start POST
# /session/end POST

components:
  schemas:
    Category:
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
      required:
        - id
        - name
    Task:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        points:
          type: integer
        min_session:
          type: integer
        max_session:
          type: integer
        enabled:
          type: boolean
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
      required:
        - id
        - name
        - description
        - points
        - categories
